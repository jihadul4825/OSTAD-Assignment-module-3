name: CICD pipline

on: 
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install Node jobs
        uses: actions/setup-node@v4
        with:
          node-version: '22'
        
      - name: Install dependencies
        run: npm install
      
      - name: Run tests
        run: npm run check 2>&1 | tee test-results.txt

      - name: Upload test results 
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.txt
          
        
  
  deploy:
    needs: test
    runs-on: self-hosted
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: test-results
          path: artifacts

      - name: Display test-results
        run: |
          echo "===== Test Results ====="
          cat artifacts/test-results.txt


      - name: Install The Packages
        run: npm install

      - name: Start The Application
        run: |
          ls -a
          pm2 status

          #* delete node-app process
          pm2 delete node-app || true

          #* Create a background process name node-app
          pm2 start "npm start" --name="node-app"

          #* Save the process
          pm2 save

      - name: Display Challenges & Solutions and Test Results
        run: |
          # 1. Add a Test Results heading
          echo "## üß™ Test Results" | tee -a $GITHUB_STEP_SUMMARY

          # 3. Open a Markdown code block
          echo '```' | tee -a $GITHUB_STEP_SUMMARY

          # 4. Stream the actual test-results.txt
          cat test-results.txt | tee -a $GITHUB_STEP_SUMMARY

          # 5. Close the code block
          echo '```' | tee -a $GITHUB_STEP_SUMMARY




          # 1. Output Challenges & Solutions via a heredoc
          cat <<EOF | tee -a $GITHUB_STEP_SUMMARY
          ## ‚ö†Ô∏è Challenges & Solutions

          **Challenge:** Self-hosted runner environment setup  
          **Solution:** Installed Node.js 22 & PM2 manually and validated with \`node -v\` & \`pm2 -v\`.

          **Challenge:** Preventing duplicate app instances during redeployment  
          **Solution:** Added cleanup step \`pm2 delete node-app || true\`.

          **Challenge:** Ensuring deploy job runs only after successful tests  
          **Solution:** Used \`needs: test\` in GitHub Actions workflow.
          EOF

          



      # - name: Add Challenges & Solutions to Job Summary
      #   run: |
      #     cat <<EOF >> $GITHUB_STEP_SUMMARY
      #     ## üéâ Dispay test-results.txt

      #     \`\`\`
      #     $(cat artifacts/test-results.txt)
      #     \`\`\`


      #     ## ‚ö†Ô∏è Challenges & Solutions

      #     **Challenge:** Self-hosted runner environment setup  
      #     **Solution:** Installed Node.js 22 & PM2 manually and validated with \`node -v\` & \`pm2 -v\`.

      #     **Challenge:** Preventing duplicate app instances during redeployment  
      #     **Solution:** Added cleanup step \`pm2 delete node-app || true\`.

      #     **Challenge:** Ensuring deploy job runs only after successful tests  
      #     **Solution:** Used \`needs: test\` in GitHub Actions workflow.
      #     EOF

      
